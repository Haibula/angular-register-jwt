{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst TOKEN_KEY = 'AuthToken';\nconst USERNAME_KEY = 'AuthUsername';\nconst AUTHORITIES_KEY = 'AuthAuthorities';\nexport let TokenStorageService = /*#__PURE__*/(() => {\n  class TokenStorageService {\n    constructor() {\n      this.roles = [];\n    }\n    signOut() {\n      window.sessionStorage.clear();\n    }\n    saveToken(token) {\n      window.sessionStorage.removeItem(TOKEN_KEY);\n      window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n    getToken() {\n      return sessionStorage.getItem(TOKEN_KEY);\n    }\n    saveUsername(username) {\n      window.sessionStorage.removeItem(USERNAME_KEY);\n      window.sessionStorage.setItem(USERNAME_KEY, username);\n    }\n    getUsername() {\n      return sessionStorage.getItem(USERNAME_KEY);\n    }\n    saveAuthorities(authorities) {\n      console.log('saveAuthorities');\n      console.log(authorities);\n      window.sessionStorage.removeItem(AUTHORITIES_KEY);\n      window.sessionStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\n    }\n    getAuthorities() {\n      this.roles = [];\n      if (sessionStorage.getItem(TOKEN_KEY)) {\n        console.log('test');\n        console.log(sessionStorage.getItem(AUTHORITIES_KEY));\n        JSON.parse(sessionStorage.getItem(AUTHORITIES_KEY)).forEach(authority => {\n          this.roles.push(authority);\n        });\n      }\n      return this.roles;\n    }\n  }\n  TokenStorageService.ɵfac = function TokenStorageService_Factory(t) {\n    return new (t || TokenStorageService)();\n  };\n  TokenStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenStorageService,\n    factory: TokenStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return TokenStorageService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}